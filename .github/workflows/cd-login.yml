name: Argo CD Login with Port Forwarding

on:
  workflow_dispatch: # Manually trigger the workflow
  push:
    branches:
      - main # Trigger on push to main branch

jobs:
  login-to-argocd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Argo CD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }} # Base64-encoded kubeconfig file
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" | base64 --decode > ~/.kube/config

      - name: Log in to Argo CD using port forwarding
        env:
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_ADMIN_PASSWORD }} # Admin password
        run: |
          # Start port forwarding in the background
          kubectl port-forward svc/argocd-server -n argocd 8080:443 > /dev/null 2>&1 &
          sleep 5 # Wait for port forwarding to stabilize

          # Log in to Argo CD using the forwarded port
          argocd --port-forward --port-forward-namespace argocd --grpc-web --plaintext login \
            --username admin \
            --password "$ARGOCD_PASSWORD" \
            localhost:8080

      - name: Verify login
        run: |
          argocd app list
