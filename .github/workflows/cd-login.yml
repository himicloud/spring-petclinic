name: Argo CD Login with Port Forwarding

on:
  workflow_dispatch: # Manually trigger the workflow
  push:
    branches:
      - main # Trigger on push to main branch

jobs:
  login-to-argocd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Argo CD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set region "$AWS_REGION"
          aws sts get-caller-identity # Verify credentials

      - name: Configure kubectl using KUBECONFIG
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }} # Base64-encoded kubeconfig file
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG" | base64 --decode > ~/.kube/config

      - name: Log in to Argo CD using port forwarding
        env:
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_ADMIN_PASSWORD }} # Admin password
        run: |
          # Start port forwarding in the background
          kubectl port-forward svc/argocd-server -n argocd 8080:443 > /dev/null 2>&1 &
          sleep 5 # Wait for port forwarding to stabilize

          # Log in to Argo CD using the forwarded port
          argocd --port-forward --port-forward-namespace argocd --grpc-web --insecure --plaintext login \
            --username admin \
            --password "$ARGOCD_PASSWORD" \
            localhost:8080

      - name: Verify login
        run: |
          argocd app list
